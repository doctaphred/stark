say Hello, world!

set # get ignore
# ayy

# Ideas not yet implemented
set -> get ignore
set => get ignore
set + get ignore

set x int 1
set step int 1
set end int 10
while {ne x end} {
    show x
    set x sum x step
}

def greet {
    say hey
    say howdy
    say hey
}
+ doc {Say hello}
+ test {
    greet
    -> {
        hey
        howdy
        hey
    }
    => None
}

greet

# set code read text.stark
# exec code

# set newcode str {say ayy}
# # newcode: str {say ayy}
# write newcode.stark get newcode
# # get newcode > write newcode.stark

# # say nothing
# # nothing > say
